// vite.config.ts
import pluginReact from "file:///Users/patrick/development/boilerplate/monorepo/node_modules/@vitejs/plugin-react/dist/index.mjs";
import fs from "fs";
import path from "path";
import { defineConfig } from "file:///Users/patrick/development/boilerplate/monorepo/node_modules/vite/dist/node/index.js";
var __vite_injected_original_dirname = "/Users/patrick/development/boilerplate/monorepo/apps/boilerplate-web-app";
var srcDir = path.join(__vite_injected_original_dirname, "src");
var distDir = path.join(__vite_injected_original_dirname, "dist");
var sslDir = path.join(__vite_injected_original_dirname, ".ssl");
var sslKeyPath = path.join(sslDir, `key.pem`);
var sslCertPath = path.join(sslDir, `cert.pem`);
var sslCaPath = path.join(sslDir, `ca.pem`);
var plugins = [pluginReact()];
var isDevServerEnabled = process.env.DEV_SERVER_ENABLED !== "0";
var getDevServerConfig = () => {
  if (!isDevServerEnabled) {
    return void 0;
  }
  return {
    https: {
      key: fs.readFileSync(sslKeyPath),
      cert: fs.readFileSync(sslCertPath),
      ca: fs.readFileSync(sslCaPath)
    }
  };
};
var vite_config_default = defineConfig({
  root: srcDir,
  build: {
    outDir: distDir
  },
  server: getDevServerConfig(),
  plugins,
  optimizeDeps: {
    include: ["react/jsx-runtime"]
  }
});
export {
  vite_config_default as default,
  getDevServerConfig
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvVXNlcnMvcGF0cmljay9kZXZlbG9wbWVudC9ib2lsZXJwbGF0ZS9tb25vcmVwby9hcHBzL2JvaWxlcnBsYXRlLXdlYi1hcHBcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9wYXRyaWNrL2RldmVsb3BtZW50L2JvaWxlcnBsYXRlL21vbm9yZXBvL2FwcHMvYm9pbGVycGxhdGUtd2ViLWFwcC92aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvcGF0cmljay9kZXZlbG9wbWVudC9ib2lsZXJwbGF0ZS9tb25vcmVwby9hcHBzL2JvaWxlcnBsYXRlLXdlYi1hcHAvdml0ZS5jb25maWcudHNcIjtpbXBvcnQgcGx1Z2luUmVhY3QgZnJvbSBcIkB2aXRlanMvcGx1Z2luLXJlYWN0XCI7XG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHR5cGUgeyBQbHVnaW5PcHRpb24sIFNlcnZlck9wdGlvbnMgfSBmcm9tIFwidml0ZVwiO1xuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcblxuY29uc3Qgc3JjRGlyID0gcGF0aC5qb2luKF9fZGlybmFtZSwgXCJzcmNcIik7XG5jb25zdCBkaXN0RGlyID0gcGF0aC5qb2luKF9fZGlybmFtZSwgXCJkaXN0XCIpO1xuXG5jb25zdCBzc2xEaXIgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCBcIi5zc2xcIik7XG5jb25zdCBzc2xLZXlQYXRoID0gcGF0aC5qb2luKHNzbERpciwgYGtleS5wZW1gKTtcbmNvbnN0IHNzbENlcnRQYXRoID0gcGF0aC5qb2luKHNzbERpciwgYGNlcnQucGVtYCk7XG5jb25zdCBzc2xDYVBhdGggPSBwYXRoLmpvaW4oc3NsRGlyLCBgY2EucGVtYCk7XG5cbmNvbnN0IHBsdWdpbnM6IFBsdWdpbk9wdGlvbltdID0gW3BsdWdpblJlYWN0KCldO1xuXG5jb25zdCBpc0RldlNlcnZlckVuYWJsZWQgPSBwcm9jZXNzLmVudi5ERVZfU0VSVkVSX0VOQUJMRUQgIT09IFwiMFwiO1xuXG5leHBvcnQgY29uc3QgZ2V0RGV2U2VydmVyQ29uZmlnID0gKCk6IFNlcnZlck9wdGlvbnMgfCB1bmRlZmluZWQgPT4ge1xuICBpZiAoIWlzRGV2U2VydmVyRW5hYmxlZCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGh0dHBzOiB7XG4gICAgICBrZXk6IGZzLnJlYWRGaWxlU3luYyhzc2xLZXlQYXRoKSxcbiAgICAgIGNlcnQ6IGZzLnJlYWRGaWxlU3luYyhzc2xDZXJ0UGF0aCksXG4gICAgICBjYTogZnMucmVhZEZpbGVTeW5jKHNzbENhUGF0aCksXG4gICAgfSxcbiAgfTtcbn07XG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICByb290OiBzcmNEaXIsXG4gIGJ1aWxkOiB7XG4gICAgb3V0RGlyOiBkaXN0RGlyLFxuICB9LFxuICBzZXJ2ZXI6IGdldERldlNlcnZlckNvbmZpZygpLFxuICBwbHVnaW5zLFxuICBvcHRpbWl6ZURlcHM6IHtcbiAgICBpbmNsdWRlOiBbXCJyZWFjdC9qc3gtcnVudGltZVwiXSxcbiAgfSxcbn0pO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUEwWSxPQUFPLGlCQUFpQjtBQUNsYSxPQUFPLFFBQVE7QUFDZixPQUFPLFVBQVU7QUFFakIsU0FBUyxvQkFBb0I7QUFKN0IsSUFBTSxtQ0FBbUM7QUFNekMsSUFBTSxTQUFTLEtBQUssS0FBSyxrQ0FBVyxLQUFLO0FBQ3pDLElBQU0sVUFBVSxLQUFLLEtBQUssa0NBQVcsTUFBTTtBQUUzQyxJQUFNLFNBQVMsS0FBSyxLQUFLLGtDQUFXLE1BQU07QUFDMUMsSUFBTSxhQUFhLEtBQUssS0FBSyxRQUFRLFNBQVM7QUFDOUMsSUFBTSxjQUFjLEtBQUssS0FBSyxRQUFRLFVBQVU7QUFDaEQsSUFBTSxZQUFZLEtBQUssS0FBSyxRQUFRLFFBQVE7QUFFNUMsSUFBTSxVQUEwQixDQUFDLFlBQVksQ0FBQztBQUU5QyxJQUFNLHFCQUFxQixRQUFRLElBQUksdUJBQXVCO0FBRXZELElBQU0scUJBQXFCLE1BQWlDO0FBQ2pFLE1BQUksQ0FBQyxvQkFBb0I7QUFDdkIsV0FBTztBQUFBLEVBQ1Q7QUFFQSxTQUFPO0FBQUEsSUFDTCxPQUFPO0FBQUEsTUFDTCxLQUFLLEdBQUcsYUFBYSxVQUFVO0FBQUEsTUFDL0IsTUFBTSxHQUFHLGFBQWEsV0FBVztBQUFBLE1BQ2pDLElBQUksR0FBRyxhQUFhLFNBQVM7QUFBQSxJQUMvQjtBQUFBLEVBQ0Y7QUFDRjtBQUNBLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLE1BQU07QUFBQSxFQUNOLE9BQU87QUFBQSxJQUNMLFFBQVE7QUFBQSxFQUNWO0FBQUEsRUFDQSxRQUFRLG1CQUFtQjtBQUFBLEVBQzNCO0FBQUEsRUFDQSxjQUFjO0FBQUEsSUFDWixTQUFTLENBQUMsbUJBQW1CO0FBQUEsRUFDL0I7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
